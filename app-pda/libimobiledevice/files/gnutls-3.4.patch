--- src/idevice.c.old	2016-03-04 04:06:06.410095314 +0000
+++ src/idevice.c	2016-03-04 04:57:31.934860411 +0000
@@ -43,6 +43,9 @@
 #endif
 #else
 #include <gnutls/gnutls.h>
+#if GNUTLS_VERSION_MAJOR >= 3
+#include <gnutls/abstract.h>
+#endif
 #endif
 
 #include "idevice.h"
@@ -626,7 +629,11 @@
 /**
  * Internally used gnutls callback function that gets called during handshake.
  */
+#if GNUTLS_VERSION_MAJOR >= 3
+static int internal_cert_callback(gnutls_session_t session, const gnutls_datum_t * req_ca_rdn, int nreqs, const gnutls_pk_algorithm_t * sign_algos, int sign_algos_length, gnutls_pcert_st** pcert, unsigned int *pcert_length, gnutls_privkey_t * pkey)
+#else
 static int internal_cert_callback(gnutls_session_t session, const gnutls_datum_t * req_ca_rdn, int nreqs, const gnutls_pk_algorithm_t * sign_algos, int sign_algos_length, gnutls_retr_st * st)
+#endif
 {
 	int res = -1;
 	gnutls_certificate_type_t type = gnutls_certificate_type_get(session);
@@ -634,12 +641,19 @@
 		ssl_data_t ssl_data = (ssl_data_t)gnutls_session_get_ptr(session);
 		if (ssl_data && ssl_data->host_privkey && ssl_data->host_cert) {
 			debug_info("Passing certificate");
+#if GNUTLS_VERSION_MAJOR >= 3
+			res = gnutls_pcert_import_x509(*pcert, ssl_data->host_cert, 0);
+			*pcert_length = 1;
+			if (res == GNUTLS_E_SUCCESS)
+			    res = gnutls_privkey_import_x509(*pkey, ssl_data->host_privkey, 0);
+#else
 			st->type = type;
 			st->ncerts = 1;
 			st->cert.x509 = &ssl_data->host_cert;
 			st->key.x509 = ssl_data->host_privkey;
 			st->deinit_all = 0;
 			res = 0;
+#endif
 		}
 	}
 	return res;
@@ -743,7 +757,11 @@
 	debug_info("enabling SSL mode");
 	errno = 0;
 	gnutls_certificate_allocate_credentials(&ssl_data_loc->certificate);
+#if GNUTLS_VERSION_MAJOR >= 3
+	gnutls_certificate_set_retrieve_function2(ssl_data_loc->certificate, internal_cert_callback);
+#else	
 	gnutls_certificate_client_set_retrieve_function(ssl_data_loc->certificate, internal_cert_callback);
+#endif
 	gnutls_init(&ssl_data_loc->session, GNUTLS_CLIENT);
 	gnutls_priority_set_direct(ssl_data_loc->session, "NONE:+VERS-SSL3.0:+ANON-DH:+RSA:+AES-128-CBC:+AES-256-CBC:+SHA1:+MD5:+COMP-NULL", NULL);
 	gnutls_credentials_set(ssl_data_loc->session, GNUTLS_CRD_CERTIFICATE, ssl_data_loc->certificate);
